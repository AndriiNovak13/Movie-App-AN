{"version":3,"sources":["components/Search/index.jsx","components/Filters/Filter.jsx","components/Filters/index.jsx","components/Movies/Movie.jsx","components/Movies/index.jsx","components/Main/index.jsx","components/Popup/index.jsx","redux/actionTypes.js","redux/actions/MoviesActions.js","App.js","redux/reducers/MoviesReducers.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Search","setMovieSearch","setIdGeneresCategory","genresId","React","useState","inputValue","setInputValue","className","type","placeholder","value","onChange","e","target","onKeyPress","key","Filter","item","id","getFetchMoviesMainId","onClick","name","Filters","category","isLoadedFilter","map","Movie","setFetchMovie","idMovie","poster_path","src","alt","title","Movies","movies","isLoaded","length","Main","Popup","movie","closePopupNow","release_date","vote_average","overview","API_URL","API_KEY","setLoaded","val","actionsTypes","payload","fetchMoviesMain","idCat","dispatch","axios","get","then","data","getMovies","results","catch","er","console","log","fetchCategory","getCategory","genres","info","getMovie","items","App","useDispatch","useSelector","isPopup","useEffect","setIdGenres","fetchMoviesSearch","fetchMovie","initialState","state","action","actionTypes","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6acbb1c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Search.scss'\r\n\r\nfunction Search({setMovieSearch, setIdGeneresCategory, genresId}) {\r\n    const [inputValue, setInputValue] = React.useState('');\r\n\r\n    const getMovieName = (e) => {\r\n        if(e.key === 'Enter'){\r\n            if(inputValue){\r\n                setMovieSearch(inputValue);\r\n                setInputValue('');\r\n                genresId !==null && setIdGeneresCategory(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"container\">\r\n\r\n                <h1>\r\n                    Movie App\r\n                </h1>\r\n\r\n                <div className=\"search__inner\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"search__input\"\r\n                        placeholder=\"Enter a movie title . . .\"\r\n                        value={inputValue}\r\n                        onChange={(e)=>setInputValue(e.target.value)}\r\n                        onKeyPress={getMovieName}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nfunction Filter({item, setIdGeneresCategory, id, genresId, getFetchMoviesMainId}) {\r\n    const handleSetIdGeneresCategory = () => {\r\n        setIdGeneresCategory(id);\r\n        getFetchMoviesMainId(id)\r\n    }\r\n    return (\r\n        \r\n        <li onClick={handleSetIdGeneresCategory} className={genresId === id ? 'active' : ''} >\r\n            {item.name}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nimport './Filters.scss';\r\nimport Filter from './Filter';\r\n\r\nfunction Filters({category, isLoadedFilter, setIdGeneresCategory, genresId, getFetchMoviesMainId}) {\r\n    const handleSetIdAndActive = () =>{\r\n        setIdGeneresCategory(null);\r\n        getFetchMoviesMainId(null)\r\n    }\r\n    return (\r\n        <div className=\"filters\">\r\n            <ul className=\"filters__category\">\r\n                <li onClick={handleSetIdAndActive}  className={(genresId === null) ? 'active' : ''}>\r\n                    MAIN\r\n                </li>\r\n                {\r\n                    !isLoadedFilter ? <h5>Loading ...</h5>\r\n                    :\r\n                    category &&\r\n                    category.map(item => (\r\n                        <Filter key={item.id} item={item} setIdGeneresCategory={setIdGeneresCategory} id={item.id} genresId={genresId} getFetchMoviesMainId={getFetchMoviesMainId} />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;\r\n","import React from 'react'\r\n\r\nfunction Movie({item, setFetchMovie, idMovie}) {\r\n    const handleSetFetchMovie = () => {\r\n        setFetchMovie(idMovie);\r\n    }\r\n    return (\r\n        <div className=\"movies__item\" onClick={handleSetFetchMovie}>\r\n            <div className=\"movies__item-img\">\r\n                {\r\n                    item.poster_path &&\r\n                    <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`} alt=\"photo\"/>\r\n                }\r\n            </div>\r\n            <div className=\"movies__item-title\">\r\n                {item.title}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nimport './Movies.scss';\r\nimport Movie from './Movie';\r\n\r\nfunction Movies({movies,isLoaded, setFetchMovie}) {\r\n    return (\r\n        <div className=\"movies\">\r\n            <div className=\"movies__box\">\r\n                {\r\n                    \r\n                    !isLoaded ? <h2>Loading ...</h2>\r\n                    :\r\n                    movies.length> 0 ?\r\n                    movies.map((item) => (\r\n                        <Movie\r\n                            key={item.id}\r\n                            item={item}\r\n                            setFetchMovie={setFetchMovie}\r\n                            idMovie={item.id}\r\n                        />\r\n                    ))\r\n                    :\r\n                    <h2>Not found</h2>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","import React from 'react';\r\n\r\nimport './Main.scss';\r\nimport Filters from '../Filters';\r\nimport Movies from '../Movies';\r\n\r\nfunction Main({movies, isLoaded, category, isLoadedFilter, setIdGeneresCategory, setFetchMovie, genresId, getFetchMoviesMainId}) {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <div className=\"main__box\">\r\n                    <Filters\r\n                        category={category}\r\n                        isLoadedFilter={isLoadedFilter}\r\n                        setIdGeneresCategory={setIdGeneresCategory}\r\n                        genresId={genresId}\r\n                        getFetchMoviesMainId={getFetchMoviesMainId}\r\n                    />\r\n                    <Movies \r\n                        movies={movies} \r\n                        isLoaded={isLoaded}\r\n                        setFetchMovie={setFetchMovie}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport './Popup.scss'\r\n\r\nfunction Popup({movie, closePopupNow}) {\r\n    return (\r\n        <div className='popup'>\r\n            <div className=\"container\">\r\n                <div className=\"popup__inner\">\r\n                    <div className=\"popup__title\">\r\n                        {movie.title}\r\n                        <span>({movie.release_date})</span>\r\n                        <p>\r\n                            Rating: {movie.vote_average}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"popup__box\">\r\n                        <div className=\"popup__photo\">\r\n                            <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"photoPopup\"/>\r\n                        </div>\r\n                        <div className=\"popup__desc\">\r\n                            {movie.overview}\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={()=>closePopupNow()}>Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;\r\n","export default {\r\n    GET_MOVIES: 'GET_MOVIES',\r\n    GET_CATEGORY: 'GET_CATEGORY',\r\n    GET_MOVIE: 'GET_MOVIE',\r\n\r\n    GET_ID_CATEGORY: 'GET_ID_CATEGORY',\r\n\r\n    CLOSE_POPUP: 'CLOSE_POPUP',\r\n\r\n    SET_LOADED: 'SET_LOADED',\r\n    SET_LOADED_FILTER: 'SET_LOADED_FILTER'\r\n}","import actionsTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst API_URL =`https://api.themoviedb.org/3/`;\r\nconst API_KEY='api_key=1758775020531967fa47acbcea8cf470';\r\n\r\nexport const setLoaded = val => ({\r\n    type: actionsTypes.SET_LOADED,\r\n    payload: val\r\n});\r\n\r\nexport const setLoadedFilter = val => ({\r\n    type: actionsTypes.SET_LOADED_FILTER,\r\n    payload: val\r\n});\r\n\r\nexport const fetchMoviesMain = (idCat) => (dispatch) => {\r\n    dispatch(setLoaded(false));\r\n    axios.get(`${API_URL}discover/movie?${API_KEY}&language=en-US&sort_by=popularity.desc&page=1${idCat !== null ? `&with_genres=${idCat}` : ''}`)\r\n        .then(({data}) => {\r\n            dispatch(getMovies(data.results));\r\n        })\r\n        .catch((er)=>{\r\n            console.log(404);\r\n        })\r\n}\r\n\r\nexport const fetchMoviesSearch = (name) => (dispatch) => {\r\n    dispatch(setLoaded(false));\r\n\r\n    axios.get(`${API_URL}search/movie?${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\r\n        .then(({data}) => {\r\n            dispatch(getMovies(data.results));\r\n        })\r\n        .catch((er)=>{\r\n            console.log(404);\r\n        })\r\n}\r\n\r\nexport const fetchCategory = () => (dispatch) => {\r\n    dispatch(setLoadedFilter(false));\r\n\r\n    axios.get(`${API_URL}genre/movie/list?${API_KEY}&language=en-US`)\r\n        .then(({data}) => {\r\n            dispatch(getCategory(data.genres));\r\n        })\r\n        .catch((er)=>{\r\n            console.log(404);\r\n        })\r\n}\r\n\r\nexport const fetchMovie = (idMovie) => (dispatch) => {\r\n    axios.get(`${API_URL}movie/${idMovie}?${API_KEY}&language=en-US`)\r\n        .then(({data}) => {\r\n            dispatch(getMovie(data));\r\n        })\r\n        .catch((er)=>{\r\n            console.log(404);\r\n        })\r\n}\r\n\r\nexport const getMovies = (info) => ({\r\n    type: actionsTypes.GET_MOVIES,\r\n    payload: info\r\n});\r\n\r\nexport const getMovie = (info) => ({\r\n    type: actionsTypes.GET_MOVIE,\r\n    payload: info\r\n})\r\n\r\nexport const getCategory = (items) => ({\r\n    type: actionsTypes.GET_CATEGORY,\r\n    payload: items\r\n});\r\n\r\nexport const setIdGenres = (id) => ({\r\n    type: actionsTypes.GET_ID_CATEGORY,\r\n    payload: id\r\n})\r\n\r\nexport const closePopup = () => ({\r\n    type: actionsTypes.CLOSE_POPUP\r\n})\r\n\r\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Search from './components/Search';\nimport Main from './components/Main';\nimport Popup from './components/Popup';\n\nimport {fetchMoviesMain, fetchMoviesSearch, fetchCategory, setIdGenres, fetchMovie, closePopup} from './redux/actions/MoviesActions';\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const {movies} = useSelector(({movies}) => movies);\n  const category = useSelector(({movies}) => movies.category);\n\n  const isLoaded = useSelector(({movies}) => movies.isLoaded);\n  const isLoadedFilter = useSelector(({movies})=> movies.isLoadedFilter);\n\n  const genresId = useSelector(({movies})=> movies.genres);\n\n  const movie = useSelector(({movies})=> movies.movie)\n  const isPopup = useSelector(({movies})=>movies.isPopup);\n\n\n  // React.useEffect(()=>{\n  //   dispatch(fetchMoviesMain(genresId));\n  // }, [genresId]);\n\n\n  React.useEffect(()=>{\n    dispatch(fetchCategory());\n    dispatch(fetchMoviesMain(genresId));\n  }, []);\n\n  const getFetchMoviesMainId = id => {\n    dispatch(fetchMoviesMain(id))\n  }\n\n  const setMovieSearch = (name) => {\n    dispatch(fetchMoviesSearch(name))\n  }\n\n  const setIdGeneresCategory = (id) => {\n    dispatch(setIdGenres(id));\n  }\n\n  const setFetchMovie  = (idMovie) => {\n    dispatch(fetchMovie(idMovie));\n  }\n\n  const closePopupNow = () => {\n    dispatch(closePopup());\n  }\n\n\n\n  return (\n      <div className=\"App\">\n\n        <Search setMovieSearch={setMovieSearch} setIdGeneresCategory={setIdGeneresCategory} genresId={genresId} />\n\n        <Main\n          movies={movies}\n          isLoaded={isLoaded}\n          setFetchMovie={setFetchMovie}\n\n          category={category}\n          isLoadedFilter={isLoadedFilter}\n          setIdGeneresCategory={setIdGeneresCategory}\n          genresId={genresId}\n          getFetchMoviesMainId={getFetchMoviesMainId}\n        />\n\n        {isPopup && <Popup movie={movie} closePopupNow={closePopupNow} />}\n\n      </div>\n\n  );\n}\n\nexport default App;\n","import actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    category: [],\r\n    movie:{},\r\n    isLoaded: false,\r\n    isLoadedFilter: false,\r\n    genres: null,\r\n    isPopup: false\r\n}\r\n\r\nconst movies = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.GET_MOVIES: {\r\n            return {\r\n                ...state,\r\n                movies: action.payload,\r\n                isLoaded: true\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_CATEGORY: {\r\n            return {\r\n                ...state,\r\n                category: action.payload,\r\n                isLoadedFilter: true\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_MOVIE: {\r\n            return {\r\n                ...state,\r\n                movie: action.payload,\r\n                isPopup: true\r\n            }\r\n        }\r\n\r\n        case actionTypes.SET_LOADED: {\r\n            return {\r\n                ...state,\r\n                isLoaded:action.payload\r\n            }\r\n        }\r\n        case actionTypes.SET_LOADED_FILTER: {\r\n            return {\r\n                ...state,\r\n                isLoadedFilter:action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_ID_CATEGORY: {\r\n            return {\r\n                ...state,\r\n                genres: action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.CLOSE_POPUP: {\r\n            return {\r\n                ...state,\r\n                isPopup: false,\r\n                movie: {}\r\n            }\r\n        }\r\n\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default movies;","import movies from './MoviesReducers'\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    movies,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n \r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}